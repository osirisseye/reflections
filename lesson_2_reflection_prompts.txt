What happens when you initialize a repository? Why do you need to do it?

to be able to monitor changes in this repo and further stage and commit any changed files


How can you use the staging area to make sure you have one commit per logical change?

Before the commit - add to the staging area every component of a logical change


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If one logical change of the commit gives additional feature which may not be utilised in the final product or should be included as a separate part of the repository.
Branches will make sure that additional feature can be developed separately without compromising the master branch code.


How do the diagrams help you visualize the branch structure?

Just like teh detached HEAD - commits are invisible for you, but visualising them can clear up the logical sequence they are formed into.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is a commit which has two parents - shares features of both of them and combines them together. It is represented by a commit with both parents indicating what we merged (often to a master branch) 


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Automatic merging could break the logic behind the files and manual one seems to be the most efficient although time consuming